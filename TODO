* User interface
  The following improvements shall ensure similiar GUI features as are available
  in old Win3.x version.

  - Function: cairoPlot2d
    Think about transition to double coordinates in all functions below
    cairoPlot2d.
    Make axisX.start and axisX.stop positions dependent of precision

  - Function: createAxisLabel
    Parametrize margin by precision

  - Function: treeSelectionCallback
    Process double-clicks (see the tree-view tutorial on how to make this)

  - Function: responseWinCreate
    Restore size of drawing area from last session 

  - Function: filterResponseTimeNew
    Allow user break

  - Feature: Predefined filters
    Improve description (and translation) of predefined filters

  - Feature: GTK-Help
    Implement GTK help, based on DocBook 5

* Filter design
  Improvements on algorithms currently implemented

  - Function: linFirFilterGen
    Correct the lowpass design cutoff frequency (see Bessel lowpass) when
    performing frequency transformations (depends on characteristic too,
    significant on perfect lowpass).

  - Function: ftrHighpass
    Handle odd degree


* Stability

  - Function: linFirFilterGen
    Implement semantic checks on bandwidth, center and cutoff frequency

  - Function: stdIirFilterGen
    Implement sematic checks on bandwidth, center and cutoff frequency

  - Function: linFirFilterGen
    Use fpsetround()?

  - File: mathMisc.c
    Implement a generic math. error handler

  - Function: ftrBandstop
    Handle GSL_POSINF for call to filterResponsePoly() 

  - Function: plotPhase
    Check phase response of linear FIR filters and improve the graph layout


* Maintainability

  - Function: mathPolyCoeffs2Roots
    Try to avoid mixing error codes from gsl_errno.h and errno.h 

  - Function: linFirDesignDlgApply
    Share code with IIR design dialog


* Source style/comments

  - Function: genCosine2System
    Give formula

  - Function: chebyT
    Improve function description by the help of LaTeX

  - Function: timeResponseProcNext
    Describe algo used here 


* Optimization

  - Function: mainDlgCreate
    Reduce number of variables used

  - Function: responseWidget
    Try to move some of these data into responsePlot.c


* New features

  - Feature: New filter class ARBITRARY
    Support of arbitrary frequency specification by Parks-McClellan algorithm

  - Feature: Response Plot
    Display coordinate when mouse moves over graph area

